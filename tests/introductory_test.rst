Вводный тест
#################################
:date: 2018-09-15 15:30

1. Наибольший общий делитель набора натуральных чисел
-----------------------------------------------------

Входные данные
~~~~~~~~~~~~~~

В первой строке количество чисел N (натуральное число), НОД которых требуется определить. 
Далее N чисел, по одной в каждой строке.

Выходные данные
~~~~~~~~~~~~~~~

НОД

Пример
~~~~~~

  | 2
  | 9
  | 12
  | 3

2. Двусвязный список
---------

Напишите две функции: функцию, создающую список, и функцию, добавляющую элемент в список.

Первая функция получает на вход массив строк, размещаемых в узлах списка, размер этого массива и указатель на последний элемент списка. Она возвращает указатель на головной элемент списка и в параметрах возвращается указатель на последний элемент. Обратите внимание, что первая трока должна оказаться в голове списка.

Вторая функция получает на вход указатель на голову списка, номер узла, после которого нужно вставить новый узел, и значение нового узла (строку). Если номер узла, после которого требуется выполнить вставку, равен -1, новый становится головой списка.
Функция возвращает указатель на голову списка и в параметрах указатель на последний элемент. 

Программа должна создавать список с помощью первой функции и добавлять элемент с помощью второй функции.

Входные данные
~~~~~~~~~~~~~~

В первой строке подается размер массива строк N, в следующих N строках подаются элементы массива. Гарантируется, что длина строк не превышает 256.

После передачи элементов массива в отдельных строках подаются номер элемента списка, после которого требуется выполнить вставку, и помещаемая в новый узел строка.

Выходные данные
~~~~~~~~~~~~~~~

Распечатать полученный список, начиная с головы, а затем еще раз с хвоста.

Пример 1
~~~~~~~~

  | 2
  | abc
  | de
  | 0
  | gf
  | abc
  | gf
  | de
  | de
  | gf
  | abc
  
Пример 2
~~~~~~~~

  | 2
  | abc
  | de
  | -1
  | gf
  | gf
  | abc
  | de
  | de
  | abc
  | gf
  
3. Упражнение на классы
-----------------------

Реализуйте базовый класс *Animal* и производные от него классы *Pigeon* и *Camel*. У класса *Animal* будет *protected* поле *species* и публичные методы *freeze()*, *move_()*, *get_species()*. Первый метод печатает *species* и не переопределяется в производных классах. *move_()* виртуальный и переопределяется в производных классах. *get_species()* не виртуальный переопределяется. Продемонстрируйте, как работают эти методы и покажите отличия между *get_species()* и *move_()* в одном из производных классов. В задании достаточно, чтобы *_move* печатал что-то разное в классах *Animal*, *Pigeon* и *Camel*.

Перегрузите оператор умножения * в классе *Camel*. Пусть при умножении *Camel* на *Camel* *species* становится равным *square_camel*.

